{"version":3,"sources":["../app.js"],"names":["express","require","app","mongoose","passport","bodyParser","flash","LocalStrategy","session","methodOverride","User","authRoutes","homeRoutes","evoRoutes","adminRoutes","profileRoutes","officeRoutes","commentsRoutes","requestsRoutes","use","secret","resave","saveUninitialized","cookie","maxAge","initialize","authenticate","createStrategy","serializeUser","deserializeUser","urlencoded","extended","json","set","static","__dirname","req","res","next","locals","currentUser","user","error","success","Promise","global","connect","listen","process","env","PORT","IP","console","log"],"mappings":"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","file":"app.js","sourcesContent":["var express = require(\"express\");\nvar app = express();\n\nvar mongoose     = require(\"mongoose\"),\n  passport       = require(\"passport\"),\n  bodyParser     = require(\"body-parser\"),\n  flash          = require(\"connect-flash\"),\n  LocalStrategy  = require(\"passport-local\"),\n  session        = require(\"express-session\"),\n  methodOverride = require(\"method-override\"),\n\n  User           = require(\"./models/user\");\n\nvar authRoutes = require('./routes/auth'),\n    homeRoutes = require('./routes/home'),\n    evoRoutes = require('./routes/evolution'),\n    adminRoutes = require('./routes/admin'),\n    profileRoutes = require('./routes/profile'),\n    officeRoutes = require('./routes/offices'),\n    commentsRoutes = require('./routes/comments'),\n    requestsRoutes = require('./routes/requests');\n\napp.use(session({\n  secret: 'keyboard cat',\n  resave: false,\n  saveUninitialized: false,\n  cookie: { maxAge: 1800000 }\n}));\n\napp.use(passport.initialize());\napp.use(passport.session());\npassport.use(new LocalStrategy(User.authenticate()));\npassport.use(User.createStrategy());\npassport.serializeUser(User.serializeUser());\npassport.deserializeUser(User.deserializeUser());\n\napp.use(bodyParser.urlencoded({extended: true}));\napp.use(bodyParser.json());\napp.set(\"view engine\", \"ejs\");\napp.use(express.static(__dirname + \"/public\"));\napp.use(flash());\napp.use(methodOverride(\"_method\"));\n\napp.use(function (req, res, next) {\n  res.locals.currentUser = req.user;\n  res.locals.error = req.flash(\"error\");\n  res.locals.success = req.flash(\"success\");\n  next();\n});\n\napp.use(authRoutes);\napp.use(homeRoutes);\napp.use(evoRoutes);\napp.use(adminRoutes);\napp.use(profileRoutes);\napp.use(officeRoutes);\napp.use(commentsRoutes);\napp.use(requestsRoutes);\n\n\nmongoose.Promise = global.Promise;\n\n// mongoose.connect(\"mongodb://gshops:pachuchi123@ds141351.mlab.com:41351/g-shop\");\nmongoose.connect(\"mongodb://localhost/geohub\");\n// Using `mongoose.connect`...\n// var promise = mongoose.connect('mongodb://gshops:pachuchi123@ds141351.mlab.com:41351/g-shop', {\n//   useMongoClient: true,\n//   /* other options */\n// });\n// // Or `createConnection`\n// var promise = mongoose.createConnection('mongodb://gshops:pachuchi123@ds141351.mlab.com:41351/g-shop', {\n//   useMongoClient: true,\n//   /* other options */\n// });\n// promise.then(function(db) {\n  /* Use `db`, for instance `db.model()`\n});\n// Or, if you already have a connection\n\n\n\n\n/* ============================            ============================ */\n//ეს ყოველთვის უცვლელია და არის ბოლოში\n\n\napp.listen(process.env.PORT || 3000, process.env.IP,function () {  //if server is on\n  console.log(\"======STARTED======\");\n});"]}