{"version":3,"sources":["../../routes/home.js"],"names":["express","require","router","Router","Posts","User","middleware","mailer","multer","storage","diskStorage","destination","req","file","cb","filename","tempName","Date","now","originalname","imageName","imgName","upload","get","isLoggedIn","res","find","sort","exec","err","postContent","flash","render","page_name","reqsContent","findById","params","id","populate","result","post","any","html","query","CKEditorFuncNum","send","HelperOption","from","to","subject","user","firstname","lastname","body","nPost","title","status","tag","transporter","sendMail","error","info","console","log","author","pic","_id","undefined","length","content","redirect","create","createdPost","postCount","Number","posts","finalCount","findByIdAndUpdate","delete","permissionChecker","findByIdAndRemove","blogPost","module","exports"],"mappings":"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","file":"home.js","sourcesContent":["const express    = require('express'),\n    router     = express.Router(),\n    Posts      = require('../models/post'),\n    User       = require('../models/user'),\n    middleware = require('../middleware'),\n    mailer     = require('../middleware/mails'),\n    multer     = require('multer');\n\nconst storage = multer.diskStorage({\n   destination: function (req, file, cb) {\n      cb(null, 'public/uploads/blogUploads/')\n   },\n   filename: function (req, file, cb) {\n      let tempName = Date.now() + \"-\" + file.originalname;\n      cb(null, tempName);\n      imageName.imgName = tempName;\n   }\n});\nconst upload = multer({ storage: storage });\n\nlet imageName = {};\n\n\n\n\nrouter.get('/home', middleware.isLoggedIn, function (req, res) {\n   Posts.find({'status': 'Solved'}).sort('-date').exec(function (err, postContent) {\n      if(err){\n         return req.flash('error', err)\n      }\n      res.render('main/home', {\n         page_name: 'home',\n         postContent: postContent })\n                     });\n});\n\nrouter.get('/instructions', middleware.isLoggedIn, function (req, res) {\n   Posts.find({'status': 'Solved'}).sort('date').exec(function (err, postContent) {\n      if(err){\n         return req.flash('error', err)\n      }\n      res.render('requests/instructions', {\n         page_name: 'instructions',\n         reqsContent: postContent\n      })\n   })\n});\n\nrouter.get('/home/apple-reg', function (req, res) {\n   res.render('main/apple') \n});\n\nrouter.get('/home/google-reg', function (req, res) {\n   res.render('main/google') \n});\n\nrouter.get('/home/new-post', function (req, res) {\n   res.render('main/new', { page_name: 'new post' });\n});\n\nrouter.get('/quiz', function (req, res) {\n   res.render('main/coming_soon');\n});\n\nrouter.get('/stock', function (req, res) {\n   res.render('main/coming_soon');\n});\n\nrouter.get('/target', function (req, res) {\n   res.render('main/coming_soon');\n});\n\nrouter.get('/home/show/:id', middleware.isLoggedIn, middleware.isLoggedIn, function (req, res) {\n   Posts.findById(req.params.id).populate(\"comments\").exec(function (err, result) {\n      if(err){\n         return req.flash(err)\n      }\n      res.render('main/show', {\n         page_name: 'none',\n         result: result\n      })\n   })\n});\n\n\nrouter.post('/ajax_upload', upload.any('editor1'), (req, res) => {\n\n   // console.log(imageName.imgName)\n\n   // res.send('/upload/basic_uploads/' + imageName.imgName)\n\n   html = \"\";\n   html += \"<script type='text/javascript'>\";\n   html += \"    var funcNum = \" + req.query.CKEditorFuncNum + \";\";\n   html += \"    var url     = \\\"/uploads/blogUploads/\" + imageName.imgName + \"\\\";\";\n   html += \"    var message = \\\"Uploaded file successfully\\\";\";\n   html += \"\";\n   html += \"    window.parent.CKEDITOR.tools.callFunction(funcNum, url, message);\";\n   html += \"</script>\";\n\n   res.send(html);\n});\n\nrouter.post('/home/new-content', middleware.isLoggedIn, function (req, res) {\n   //  sending a mail with content\n   let HelperOption = {\n      from: 'Geohub',\n      to: 'sandro.suladze@gmail.com',\n      subject: `New post by ` + req.user.firstname + ` ` + req.user.lastname,\n      html: `<strong>Title:</strong> ` + req.body.nPost.title +  `<br> <strong>Status: </strong>` + req.body.status + `<br> <strong>TAG:</strong> ` + req.body.nPost.tag\n   };\n\n   mailer.transporter.sendMail(HelperOption, function (error, info) {\n      if(error){\n         return console.log(error)\n      }\n      console.log(info)\n   });\n\n   // creating object for mongoose model\n   let postContent = req.body.nPost;\n   postContent.author = {\n      firstname: req.user.firstname,\n      lastname: req.user.lastname,\n      pic: req.user.pic,\n      id: req.user._id\n   };\n\n   //i don't know wtf im checking here\n      if(req.body.status == undefined){\n      postContent.status = 'Unsolved'\n      } else {\n         postContent.status = req.body.status;\n      }\n\n   if(postContent.title.length <= 1 && postContent.content <= 1){\n      req.flash('error', 'სათაური ან კონტენტი ვერ მოიძებნა');\n      res.redirect('back')\n   }else{\n   Posts.create(postContent, function (err, createdPost) {\n      if(err){\n         return console.log(err);\n      }\n      var postCount = Number;\n      if(req.user.posts == undefined){\n         postCount = 1\n      }else{\n         postCount = req.user.posts + 1\n      }\n      var finalCount = { posts: postCount };\n\n      User.findByIdAndUpdate(req.user._id, finalCount, function (err, user) {\n         if(err){\n            return req.flash(\"error\", err)\n         }\n         req.flash(\"success\", \"Good Job :)\");\n         res.redirect(\"/home/show/\" + createdPost.id);\n      })\n\n   });\n   }\n});\nrouter.delete(\"/home/:id\", middleware.permissionChecker, function (req, res) {\n   Posts.findByIdAndRemove(req.params.id, function (err, blogPost) {\n      if(err){\n         console.log(err)\n      }else{\n         req.flash(\"success\", blogPost.title + \" \" + \"has been removed\");\n         res.redirect(\"back\");\n      }\n   });\n});\n\nmodule.exports = router;\n\n\n"]}