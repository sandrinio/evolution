{"version":3,"sources":["../../routes/requests.js"],"names":["express","require","router","Router","middleware","Post","mailer","get","isLoggedIn","req","res","find","exec","err","reqsContent","console","log","render","page_name","findById","params","id","result","flash","$text","$search","query","q","score","$meta","sort","data","postContent","dataCount","length","put","obj","body","nPost","status","findByIdAndUpdate","redirect","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,SAASF,QAAQG,MAAR,EAAb;AACA,IAAIC,aAAaH,QAAQ,eAAR,CAAjB;AACA,IAAII,OAAOJ,QAAQ,gBAAR,CAAX;AACA,IAAIK,SAASL,QAAQ,qBAAR,CAAb;;AAEAC,OAAOK,GAAP,CAAW,UAAX,EAAuBH,WAAWI,UAAlC,EAA8C,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxDL,QAAKM,IAAL,CAAU,EAAC,UAAU,MAAM,UAAN,IAAoB,WAA/B,EAAV,EAAuDC,IAAvD,CAA4D,UAAUC,GAAV,EAAeC,WAAf,EAA2B;AACnF,UAAGD,GAAH,EAAO;AACH,gBAAOE,QAAQC,GAAR,CAAYH,GAAZ,CAAP;AACH;AACGH,UAAIO,MAAJ,CAAW,eAAX,EAA4B;AACzBC,oBAAW,MADc;AAEzBJ,sBAAaA;AAFY,OAA5B;AAIP,IARD;AASH,CAVD;;AAaAZ,OAAOK,GAAP,CAAW,gBAAX,EAA6B,UAAUE,GAAV,EAAeC,GAAf,EAAoB;AAC9CL,QAAKc,QAAL,CAAcV,IAAIW,MAAJ,CAAWC,EAAzB,EAA6B,UAAUR,GAAV,EAAeS,MAAf,EAAuB;AACjD,UAAGT,GAAH,EAAO;AACJJ,aAAIc,KAAJ,CAAU,OAAV,EAAmBV,GAAnB;AACAE,iBAAQC,GAAR,CAAYH,GAAZ;AACF,OAHD,MAGK;AACFH,aAAIO,MAAJ,CAAW,eAAX,EAA4B;AACzBK,oBAAQA,MADiB;AAEzBJ,uBAAW;AAFc,UAA5B;AAIF;AACH,IAVD;AAWF,CAZD;;AAcAhB,OAAOK,GAAP,CAAW,eAAX,EAA4B,UAACE,GAAD,EAAMC,GAAN,EAAa;AACtCL,QAAKM,IAAL,CAAU,EAACa,OAAO,EAAEC,SAAShB,IAAIiB,KAAJ,CAAUC,CAArB,EAAR,EAAV,EACI,EAAEC,OAAO,EAACC,OAAO,WAAR,EAAT,EADJ,EAEKC,IAFL,CAEU,OAFV,EAGKlB,IAHL,CAGU,UAAUC,GAAV,EAAekB,IAAf,EAAqB;AACxB,UAAGlB,GAAH,EAAO;AACJ,gBAAOE,QAAQC,GAAR,CAAYH,GAAZ,CAAP;AACF;AACDH,UAAIO,MAAJ,CAAW,qBAAX,EAAkC;AAC/Be,sBAAaD,IADkB;AAE/BE,oBAAWF,KAAKG,MAFe;AAG/BhB,oBAAW;AAHoB,OAAlC;AAKF,IAZL;AAaF,CAdD;;AAiBAhB,OAAOiC,GAAP,CAAW,mBAAX,EAAgC,UAAU1B,GAAV,EAAeC,GAAf,EAAoB;AACjD,OAAI0B,MAAM3B,IAAI4B,IAAJ,CAASC,KAAnB;AACAF,OAAIG,MAAJ,GAAa9B,IAAI4B,IAAJ,CAASE,MAAtB;AACAlC,QAAKmC,iBAAL,CAAuB/B,IAAIW,MAAJ,CAAWC,EAAlC,EAAsCe,GAAtC,EAA2C,UAAUvB,GAAV,EAAeS,MAAf,EAAuB;AAC/D,UAAGT,GAAH,EAAO;AACJE,iBAAQC,GAAR,CAAYH,GAAZ;AACF,OAFD,MAEK;AACFH,aAAI+B,QAAJ,CAAa,gBAAgBhC,IAAIW,MAAJ,CAAWC,EAAxC;AACF;AACH,IAND;AAOF,CAVD;;AAYAqB,OAAOC,OAAP,GAAiBzC,MAAjB","file":"requests.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\nvar middleware = require('../middleware');\nlet Post = require('../models/post');\nvar mailer = require('../middleware/mails');\n\nrouter.get('/request', middleware.isLoggedIn, (req, res) => {\n    Post.find({'status': '' || 'Unsolved' || 'undefined'}).exec(function (err, reqsContent){\n        if(err){\n            return console.log(err)\n        }\n            res.render('requests/reqs', {\n               page_name: 'reqs',\n               reqsContent: reqsContent\n            });\n    });\n});\n\n\nrouter.get('/post/:id/edit', function (req, res) {\n   Post.findById(req.params.id, function (err, result) {\n      if(err){\n         req.flash('Error', err);\n         console.log(err)\n      }else{\n         res.render('requests/edit', {\n            result: result,\n            page_name: 'none'\n         })\n      }\n   })\n});\n\nrouter.get('/posts/search', (req, res) =>{\n   Post.find({$text: { $search: req.query.q }},\n       { score: {$meta: \"textScore\"}})\n       .sort(\"-date\")\n       .exec(function (err, data) {\n          if(err){\n             return console.log(err)\n          }\n          res.render('main/search_results', {\n             postContent: data,\n             dataCount: data.length,\n             page_name: 'none'\n          })\n       })\n});\n\n\nrouter.put('/request/:id/edit', function (req, res) {\n   let obj = req.body.nPost;\n   obj.status = req.body.status;\n   Post.findByIdAndUpdate(req.params.id, obj, function (err, result) {\n      if(err){\n         console.log(err)\n      }else{\n         res.redirect('/home/show/' + req.params.id)\n      }\n   })\n});\n\nmodule.exports = router;"]}