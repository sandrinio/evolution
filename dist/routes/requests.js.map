{"version":3,"sources":["../../routes/requests.js"],"names":["express","require","router","Router","middleware","Post","mailer","get","req","res","find","sort","exec","err","reqsContent","console","log","render","page_name","findById","params","id","result","flash","put","findByIdAndUpdate","body","nPost","Options","from","to","subject","title","html","content","transporter","sendMail","info","error","redirect","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,SAASF,QAAQG,MAAR,EAAb;AACA,IAAIC,aAAaH,QAAQ,eAAR,CAAjB;AACA,IAAII,OAAOJ,QAAQ,gBAAR,CAAX;AACA,IAAIK,SAASL,QAAQ,qBAAR,CAAb;;AAEAC,OAAOK,GAAP,CAAW,UAAX,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCJ,QAAKK,IAAL,CAAU,EAAC,UAAU,MAAM,UAAN,IAAoB,WAA/B,EAAV,EAAuDC,IAAvD,CAA4D,OAA5D,EAAqEC,IAArE,CAA0E,UAAUC,GAAV,EAAeC,WAAf,EAA2B;AACjG,UAAGD,GAAH,EAAO;AACH,gBAAOE,QAAQC,GAAR,CAAYH,GAAZ,CAAP;AACH;;AAEGJ,UAAIQ,MAAJ,CAAW,eAAX,EAA4B;AACEC,oBAAW,MADb;AAEEJ,sBAAaA;AAFf,OAA5B;AAIP,IATD;AAUH,CAXD;;AAcAZ,OAAOK,GAAP,CAAW,gBAAX,EAA6B,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC9CJ,QAAKc,QAAL,CAAcX,IAAIY,MAAJ,CAAWC,EAAzB,EAA6B,UAAUR,GAAV,EAAeS,MAAf,EAAuB;AACjD,UAAGT,GAAH,EAAO;AACJL,aAAIe,KAAJ,CAAU,OAAV,EAAmBV,GAAnB;AACAE,iBAAQC,GAAR,CAAYH,GAAZ;AACF,OAHD,MAGK;AACFJ,aAAIQ,MAAJ,CAAW,eAAX,EAA4B;AACzBK,oBAAQA,MADiB;AAEzBJ,uBAAW;AAFc,UAA5B;AAIF;AACH,IAVD;AAYF,CAbD;;AAeAhB,OAAOsB,GAAP,CAAW,mBAAX,EAAgC,UAAUhB,GAAV,EAAeC,GAAf,EAAoB;AACjDJ,QAAKoB,iBAAL,CAAuBjB,IAAIY,MAAJ,CAAWC,EAAlC,EAAsCb,IAAIkB,IAAJ,CAASC,KAA/C,EAAsD,UAAUd,GAAV,EAAeS,MAAf,EAAuB;AAC1E,UAAGT,GAAH,EAAO;AACJE,iBAAQC,GAAR,CAAYH,GAAZ;AACF,OAFD,MAEK;AACF,aAAIe,UAAU;AACXC,kBAAM,gBADK;AAEXC,gBAAI,0BAFO;AAGXC,qBAAST,OAAOU,KAHL;AAIXC,kBAAMX,OAAOY;AAJF,UAAd;AAMA5B,gBAAO6B,WAAP,CAAmBC,QAAnB,CAA4BR,OAA5B,EAAqC,UAAUf,GAAV,EAAewB,IAAf,EAAqB;AACvD,gBAAGC,KAAH,EAAS;AACN,sBAAOvB,QAAQC,GAAR,CAAYsB,KAAZ,CAAP;AACF;AACDvB,oBAAQC,GAAR,CAAY,oBAAZ;AACAD,oBAAQC,GAAR,CAAYqB,IAAZ;AACF,UAND;AAOA5B,aAAI8B,QAAJ,CAAa,gBAAgB/B,IAAIY,MAAJ,CAAWC,EAAxC;AACF;AACH,IAnBD;AAoBF,CArBD;;AAuBAmB,OAAOC,OAAP,GAAiBvC,MAAjB","file":"requests.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\nvar middleware = require('../middleware');\nlet Post = require('../models/post');\nvar mailer = require('../middleware/mails');\n\nrouter.get('/request', (req, res) => {\n    Post.find({'status': '' || 'Unsolved' || 'undefined'}).sort('-date').exec(function (err, reqsContent){\n        if(err){\n            return console.log(err)\n        }\n    \n            res.render('requests/reqs', {\n                                          page_name: 'reqs',\n                                          reqsContent: reqsContent  \n                                        });\n    });\n});\n\n\nrouter.get('/post/:id/edit', function (req, res) {\n   Post.findById(req.params.id, function (err, result) {\n      if(err){\n         req.flash('Error', err);\n         console.log(err)\n      }else{\n         res.render('requests/edit', {\n            result: result,\n            page_name: 'none'\n         })\n      }\n   })\n\n});\n\nrouter.put('/request/:id/edit', function (req, res) {\n   Post.findByIdAndUpdate(req.params.id, req.body.nPost, function (err, result) {\n      if(err){\n         console.log(err)\n      }else{\n         var Options = {\n            from: 'Sandro Suladze',\n            to: 'sandro.suladze@gmail.com',\n            subject: result.title,\n            html: result.content\n         };\n         mailer.transporter.sendMail(Options, function (err, info) {\n            if(error){\n               return console.log(error)\n            }\n            console.log('Mail has been sent');\n            console.log(info)\n         });\n         res.redirect('/home/show/' + req.params.id)\n      }\n   })\n});\n\nmodule.exports = router;"]}